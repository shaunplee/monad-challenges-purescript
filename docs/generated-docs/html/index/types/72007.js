// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["72007"] = [{"values":[{"sourceSpan":{"start":[60,1],"name":"src/MCPrelude.purs","end":[60,24]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"toLetter","moduleName":"MCPrelude","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":"src/MCPrelude.purs","end":[49,22]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mkSeed","moduleName":"MCPrelude","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["MCPrelude"],"Seed"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[65,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"trunc","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Truncates the decimal portion of a number. Equivalent to `floor` if the\nnumber is positive, and `ceil` if the number is negative.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[61,40]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"tan","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the tangent of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[58,40]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sqrt","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the square root of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[55,40]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"sin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the sine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[52,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"round","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the integer closest to the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[40,39]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"log","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the natural logarithm of a number.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[37,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"floor","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the largest integer not larger than the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[34,39]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"exp","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `e` exponentiated to the power of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[31,40]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"cos","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the cosine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[28,40]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"ceil","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the smallest integer not smaller than the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[18,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"atan","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse tangent of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[15,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"asin","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse sine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[12,41]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"acos","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Math"],"Radians"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse cosine of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[9,39]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"abs","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the absolute value of the argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[39,45]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"readFloat","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a floating point value from a `String`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[33,45]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"isFinite","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a number is finite\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/globals/v5.0.0/src/Global.purs","end":[27,42]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"isNaN","moduleName":"Global","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a number is NaN\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/globals/v5.0.0/src/Global/Unsafe.purs","end":[41,60]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"unsafeEncodeURIComponent","moduleName":"Global.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI component encoding. May throw a `URIError` if given a value with\nunencodeable characters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/globals/v5.0.0/src/Global/Unsafe.purs","end":[37,60]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"unsafeDecodeURIComponent","moduleName":"Global.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI component decoding. May throw a `URIError` if given a value with\nundecodeable escape sequences.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/globals/v5.0.0/src/Global/Unsafe.purs","end":[33,51]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"unsafeEncodeURI","moduleName":"Global.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI encoding. May throw a `URIError` if given a value with unencodeable\ncharacters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/globals/v5.0.0/src/Global/Unsafe.purs","end":[29,51]},"score":6,"packageInfo":{"values":["globals"],"tag":"Package"},"name":"unsafeDecodeURI","moduleName":"Global.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"URI decoding. May throw a `URIError` if given a value with undecodeable\nescape sequences.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[547,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[547,30]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"trimStart","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Remove whitespace from the beginning of a string.\nWrapper around JavaScript's `String.prototype.trimStart` method.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[541,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[541,28]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"trimEnd","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Remove whitespace from the end of a string.\nWrapper around JavaScript's `String.prototype.trimEnd` method.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[484,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[484,32]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"stripMargin","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes leading whitespace and pipe character from each line. Useful for\ndedenting strings enclosed in triple double quotation marks.\nInspired by Scala's `stripMargin` method.\nDoes not preserve original line endings.\n\nExample:\n```purescript\nstripMargin\n  \"\"\"\n  |Line 1\n  |Line 2\n  |Line 3\n  \"\"\"\n== \"Line 1\\nLine 2\\nLine 3\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[464,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[464,36]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"stripDiacritics","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Strip diacritics from a string.\n\nExample:\n```purescript\nstripDiacritics \"Ångström\"        == \"Angstrom\"\nstripDiacritics \"Crème Brulée\"    == \"Creme Brulee\"\nstripDiacritics \"Götterdämmerung\" == \"Gotterdammerung\"\nstripDiacritics \"ℙ∪𝕣ⅇႽ𝚌𝕣ⅈ𝚙†\"      == \"ℙ∪𝕣ⅇႽ𝚌𝕣ⅈ𝚙†\"\nstripDiacritics \"Raison d'être\"   == \"Raison d'etre\"\nstripDiacritics \"Týr\"             == \"Tyr\"\nstripDiacritics \"Zürich\"          == \"Zurich\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[257,30]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"normalize","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the `Normalization Form C` of a given string.\nThis is the form that is recommended by the W3C.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[221,19]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"length","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"DEPRECATED: `Data.String.Utils.length`"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"DEPRECATED: This function is now available in `purescript-strings`.\n\nReturn the number of Unicode code points in a string.\nNote that this function correctly accounts for Unicode symbols that\nare made up of surrogate pairs. If you want a simple wrapper around\nJavaScript's `string.length` property, you should use the\n`Data.String.CodeUnits.length` function from `purescript-strings`.\n\n```purescript\nlength \"PureScript\" == 10\nlength \"ℙ∪𝕣ⅇႽ𝚌𝕣ⅈ𝚙†\" == 10    -- 14 with `Data.String.length`\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/stringutils/v0.0.10/src/Data/String/Utils.purs","end":[148,32]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"escapeRegex","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Escape a string so that it can be used as a literal string within a regular\nexpression.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/strings/v4.0.2/src/Data/String/Unsafe.purs","end":[15,38]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"char","moduleName":"Data.String.Unsafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a string of length `1` to a character.\n\n**Unsafe:** throws runtime exception if length is not `1`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/strings/v4.0.2/src/Data/String/Regex.purs","end":[68,35]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"parseFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses the string representation of `RegexFlags`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/strings/v4.0.2/src/Data/String/Regex.purs","end":[59,36]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"renderFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the string representation of the given `RegexFlags`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/strings/v4.0.2/src/Data/String/Regex.purs","end":[52,29]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"flags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/strings/v4.0.2/src/Data/String/Regex.purs","end":[49,41]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"source","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the pattern string used to construct the given `Regex`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[165,44]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toUpper","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper (NonEmptyString \"Hello\") == NonEmptyString \"HELLO\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[157,44]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toLower","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower (NonEmptyString \"hElLo\") == NonEmptyString \"hello\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[67,37]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a `NonEmptyString` back into a standard `String`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[63,56]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"unsafeFromString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A partial version of `fromString`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodeUnits.purs","end":[191,32]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength (NonEmptyString \"Hello World\") == 11\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodeUnits.purs","end":[67,36]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a character.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodePoints.purs","end":[100,32]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodePoints.purs","end":[58,41]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v4.0.2/src/Data/String/Common.purs","end":[88,40]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"trim","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v4.0.2/src/Data/String/Common.purs","end":[79,43]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toUpper","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper \"Hello\" == \"HELLO\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/strings/v4.0.2/src/Data/String/Common.purs","end":[72,43]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toLower","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower \"hElLo\" == \"hello\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/strings/v4.0.2/src/Data/String/Common.purs","end":[23,26]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"null","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` if the given string is empty.\n\n```purescript\nnull \"\" == true\nnull \"Hi\" == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/strings/v4.0.2/src/Data/String/CodeUnits.purs","end":[150,39]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/strings/v4.0.2/src/Data/String/CodeUnits.purs","end":[83,43]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a string of length `1` containing the given character.\n\n```purescript\nsingleton 'l' == \"l\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/strings/v4.0.2/src/Data/String/CodePoints.purs","end":[215,24]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the string. Operates in constant\nspace and in time linear to the length of the string.\n\n```purescript\n>>> length \"b 𝐀𝐀 c 𝐀\"\n8\n-- compare to Data.String:\n>>> length \"b 𝐀𝐀 c 𝐀\"\n11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v4.0.2/src/Data/String/CodePoints.purs","end":[88,33]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"singleton","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a string containing just the given code point. Operates in\nconstant space and time.\n\n```purescript\n>>> map singleton (toEnum 0x1D400)\nJust \"𝐀\"\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/strings/v4.0.2/src/Data/String/CodePoints.purs","end":[77,39]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointFromChar","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a CodePoint from a given Char.\n\n```purescript\n>>> codePointFromChar 'B'\nCodePoint 0x42 -- represents 'B'\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/prelude/v4.1.1/src/Data/Ordering.purs","end":[33,31]},"score":84,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"invert","moduleName":"Data.Ordering","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Reverses an `Ordering` value, flipping greater than for less than while\npreserving equality.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[165,22]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"odd","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The negation of `even`.\n\n``` purescript\nodd 0 == false\nodd 1 == true\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[156,23]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"even","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is an even number.\n\n``` purescript\neven 0 == true\neven 1 == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[147,24]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"parity","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is `Even` or `Odd`.\n\n``` purescript\nparity 0 == Even\nparity 1 == Odd\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[76,41]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"toNumber","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts an `Int` value back into a `Number`. Any `Int` is a valid `Number`\nso there is no loss of precision with this function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[61,23]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"round","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[49,23]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"floor","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped, `NaN`\nand `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[55,22]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"ceil","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\ngreater than the argument. Values outside the `Int` range are clamped,\n`NaN` and `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/integers/v4.0.0/src/Data/Int/Bits.purs","end":[37,40]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"complement","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise NOT.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","end":[9,22]},"score":14,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn1","moduleName":"Data.Function.Uncurried","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function of one argument\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/strings/v4.0.2/src/Data/Char.purs","end":[11,26]},"score":16,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"toCharCode","moduleName":"Data.Char","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the numeric Unicode value of the character.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/stringutils/v0.0.10/src/Data/Char/Utils.purs","end":[54,37]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"unsafeFromCodePoint","moduleName":"Data.Char.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the character corresponding to the given Unicode code point.\n**Unsafe:** Throws runtime exception if the given number is outside the\nrange 0 .. 0x10FFFF.\nThis function uses `String` instead of `Char` because PureScript\n`Char`s must be UTF-16 code units and hence cannot represent all Unicode\ncode points.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/stringutils/v0.0.10/src/Data/Char/Utils.purs","end":[43,29]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"toCodePoint","moduleName":"Data.Char.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the Unicode code point of a character.\nThis function uses `String` instead of `Char` because PureScript\n`Char`s must be UTF-16 code units and hence cannot represent all Unicode\ncode points.\n\nExample:\n```purescript\ntoCodePoint '∀' == 8704\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/stringutils/v0.0.10/src/Data/Char/Utils.purs","end":[31,33]},"score":1,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"isSurrogate","moduleName":"Data.Char.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return true if the given character (Unicode code point) is a high or low\nsurrogate code point.\nThis function uses `String` instead of `Char` because PureScript\n`Char`s must be UTF-16 code units and hence cannot represent all Unicode\ncode points.\n"}],"tag":"SearchResult"}]