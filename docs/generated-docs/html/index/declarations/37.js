// This file was generated by purescript-docs-search.
window.DocsSearchIndex["37"] = [["zshr",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/integers/v4.0.0/src/Data/Int/Bits.purs","end":[34,41]},"score":16,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"zshr","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n"}],"tag":"SearchResult"}]],["type",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Type","moduleName":"Prim","info":{"values":[],"tag":"ExternKindResult"},"hashAnchor":"k","comments":"`Type` is the kind of all proper types: those that classify value-level terms.\nFor example the type `Boolean` has kind `Type`; denoted by `Boolean :: Type`.\n"}],"tag":"SearchResult"}]],["typeequals",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/type-equality/v3.0.0/src/Type/Equality.purs","end":[19,17]},"score":2,"packageInfo":{"values":["type-equality"],"tag":"Package"},"name":"TypeEquals","moduleName":"Type.Equality","info":{"values":[{"superclasses":[],"fundeps":[[["a"],["b"]],[["b"],["a"]]],"arguments":[["a",null],["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"This type class asserts that types `a` and `b`\nare equal.\n\nThe functional dependencies and the single\ninstance below will force the two type arguments\nto unify when either one is known.\n\nNote: any instance will necessarily overlap with\n`refl` below, so instances of this class should\nnot be defined in libraries.\n"}],"tag":"SearchResult"}]],["%",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[70,24]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"(%)","moduleName":"Math","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]